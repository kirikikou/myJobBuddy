const parallelizationConfig = require('./parallelization');

const IS_PRODUCTION = process.env.NODE_ENV === 'production';

module.exports = {
  PROCESS_LOOP_INTERVAL_MS: IS_PRODUCTION ? 200 : 100,
  PROCESS_LOOP_JITTER_MS_MIN: 50,
  PROCESS_LOOP_JITTER_MS_MAX: 200,
  PROCESSING_CONCURRENCY_MIN: 2,
  PROCESSING_CONCURRENCY_MAX: 64,

  BATCH_MAX_SIZE: IS_PRODUCTION ? 16 : 8,
  BATCH_MIN_SIZE: 2,
  BATCH_COLLECT_WINDOW_MS: 250,
  BATCH_TIMEOUT_MS: 5000,
  BATCH_RESULT_MAP_STRICT: true,

  RETRY_MAX_ATTEMPTS: 2,
  RETRY_BACKOFF_BASE_MS: 500,
  RETRY_BACKOFF_FACTOR: 2,
  RETRY_BACKOFF_JITTER: 0.1,

  AWS_FALLBACK_ENABLED: true,
  AWS_FALLBACK_RATIO: 0.5,
  AWS_QUEUE_MAX_LENGTH: IS_PRODUCTION ? 2000 : 500,
  AWS_RETRY_MAX_ATTEMPTS: 3,

  HISTORY_TTL_MS: 3600000,
  HISTORY_MAX_ENTRIES: IS_PRODUCTION ? 100000 : 10000,
  HISTORY_PURGE_INTERVAL_MS: 300000,
  HISTORY_STORE_PAYLOAD_HASH_ONLY: true,

  CPU_TO_WORKERS_COEFF: 8,
  CPU_TO_WORKERS_MIN: 2,
  CPU_TO_WORKERS_MAX: 64,
  WORKERS_PER_GB_RAM: 1,

  REQUEST_VALIDATION_STRICT: true,
  QUEUE_MAX_LENGTH: IS_PRODUCTION ? 50000 : 5000,
  QUEUE_MAX_LENGTH_FREE: IS_PRODUCTION ? 100 : 50,
  QUEUE_MAX_LENGTH_PRO: IS_PRODUCTION ? 1000 : 200,
  QUEUE_MAX_LENGTH_PREMIUM: IS_PRODUCTION ? 5000 : 1000,
  MAX_INFLIGHT_FREE: 5,
  MAX_INFLIGHT_PRO: 50,
  MAX_INFLIGHT_PREMIUM: 200,
  QUEUE_REJECT_POLICY: 'drop_oldest',

  ESTIMATE_BOOTSTRAP_MS: 30000,
  ESTIMATE_DECAY: 0.2,
  ESTIMATE_PER_JOBTYPE: true,

  LOG_CATEGORY_BUFFER: 'buffer',
  LOG_CATEGORY_SERVICE: 'service',
  LOG_CATEGORY_TIMING: 'timing',
  METRICS_SAMPLE_RATE: IS_PRODUCTION ? 0.1 : 1.0,
  METRICS_ASYNC_BUFFER: IS_PRODUCTION,

  SHUTDOWN_DRAIN_TIMEOUT_MS: 30000,
  SHUTDOWN_PERSIST_STATE: true,
  SHUTDOWN_FAIL_OPEN: false,
  SHUTDOWN_STATE_FILE: './queue_state.ndjson',

  IDEMPOTENCE_SECRET: process.env.QUEUE_HMAC_SECRET || 'default-dev-secret-change-in-prod',
  IDEMPOTENCE_CACHE_TTL_VIP_MS: 600000,
  IDEMPOTENCE_CACHE_TTL_STANDARD_MS: 300000,
  IDEMPOTENCE_CACHE_MAX_ENTRIES: 10000,

  DLQ_TTL_MS: 604800000,
  DLQ_MAX_ENTRIES: IS_PRODUCTION ? 50000 : 1000,
  DLQ_PURGE_INTERVAL_MS: 3600000,

  BREAKER_FAILURE_THRESHOLD: 0.5,
  BREAKER_MIN_REQUESTS: 10,
  BREAKER_LATENCY_THRESHOLD_MS: 30000,
  BREAKER_PROBE_INTERVAL_MS: 30000,
  BREAKER_RESET_TIMEOUT_MS: 60000,

  MAX_ITEM_SUBSCRIBERS: 50,
  SUBSCRIBER_TTL_MS: 300000,

  WEIGHT_FREE: 1,
  WEIGHT_PRO: 3,
  WEIGHT_PREMIUM: 8,
  AGE_BOOST_FACTOR: 0.001,
  PRIORITY_ESCALATION_THRESHOLD_MS: 180000,

  AFFINITY_WINDOW_MS: 1000,
  AFFINITY_MIN_BATCH: 3,
  AFFINITY_MAX_WAIT_MS: 5000,

  SSE_THROTTLE_INTERVAL_MS: 1000,
  SSE_HEARTBEAT_INTERVAL_MS: 30000,
  SSE_AUTH_REQUIRED: true,

  HEALTH_P95_ALERT_MS: 180000,
  HEALTH_ERROR_RATE_ALERT: 0.1,
  HEALTH_BREAKER_OPEN_ALERT_S: 300,
  HEALTH_QUEUE_DEPTH_ALERT: IS_PRODUCTION ? 1000 : 100,

  getMaxWaitTimeMs() {
    return parallelizationConfig.MAX_WAIT_TIME_MINUTES * 60 * 1000;
  },

  getMaxParallel() {
    return parallelizationConfig.MAX_PARALLEL;
  },

  getMinParallel() {
    return parallelizationConfig.MIN_PARALLEL;
  },

  getQueueLimitForPlan(plan) {
    const limits = {
      'free': this.QUEUE_MAX_LENGTH_FREE,
      'pro': this.QUEUE_MAX_LENGTH_PRO,
      'premium': this.QUEUE_MAX_LENGTH_PREMIUM
    };
    return limits[plan] || this.QUEUE_MAX_LENGTH_FREE;
  },

  getInflightLimitForPlan(plan) {
    const limits = {
      'free': this.MAX_INFLIGHT_FREE,
      'pro': this.MAX_INFLIGHT_PRO,
      'premium': this.MAX_INFLIGHT_PREMIUM
    };
    return limits[plan] || this.MAX_INFLIGHT_FREE;
  },

  getPriorityWeightForPlan(plan) {
    const weights = {
      'free': this.WEIGHT_FREE,
      'pro': this.WEIGHT_PRO,
      'premium': this.WEIGHT_PREMIUM
    };
    return weights[plan] || this.WEIGHT_FREE;
  },

  getIdempotenceTTLForPlan(plan) {
    return ['premium', 'pro'].includes(plan) 
      ? this.IDEMPOTENCE_CACHE_TTL_VIP_MS 
      : this.IDEMPOTENCE_CACHE_TTL_STANDARD_MS;
  }
};